// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scheduling_weights.proto

#include "scheduling_weights.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class SchedulingWeightsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SchedulingWeights>
      _instance;
} _SchedulingWeights_default_instance_;
class BlankingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Blanking>
      _instance;
} _Blanking_default_instance_;
namespace protobuf_scheduling_5fweights_2eproto {
static void InitDefaultsSchedulingWeights() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SchedulingWeights_default_instance_;
    new (ptr) ::SchedulingWeights();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SchedulingWeights::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SchedulingWeights =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSchedulingWeights}, {}};

static void InitDefaultsBlanking() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Blanking_default_instance_;
    new (ptr) ::Blanking();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Blanking::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Blanking =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBlanking}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SchedulingWeights.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Blanking.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchedulingWeights, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchedulingWeights, ran_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SchedulingWeights, weights_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Blanking, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Blanking, ran_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Blanking, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Blanking, b_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SchedulingWeights)},
  { 7, -1, sizeof(::Blanking)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SchedulingWeights_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Blanking_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "scheduling_weights.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030scheduling_weights.proto\"7\n\021Scheduling"
      "Weights\022\021\n\tran_index\030\001 \001(\r\022\017\n\007weights\030\002 "
      "\003(\002\"3\n\010Blanking\022\021\n\tran_index\030\001 \001(\r\022\t\n\001a\030"
      "\002 \001(\005\022\t\n\001b\030\003 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 144);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "scheduling_weights.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_scheduling_5fweights_2eproto

// ===================================================================

void SchedulingWeights::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SchedulingWeights::kRanIndexFieldNumber;
const int SchedulingWeights::kWeightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SchedulingWeights::SchedulingWeights()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_scheduling_5fweights_2eproto::scc_info_SchedulingWeights.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SchedulingWeights)
}
SchedulingWeights::SchedulingWeights(const SchedulingWeights& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      weights_(from.weights_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ran_index_ = from.ran_index_;
  // @@protoc_insertion_point(copy_constructor:SchedulingWeights)
}

void SchedulingWeights::SharedCtor() {
  ran_index_ = 0u;
}

SchedulingWeights::~SchedulingWeights() {
  // @@protoc_insertion_point(destructor:SchedulingWeights)
  SharedDtor();
}

void SchedulingWeights::SharedDtor() {
}

void SchedulingWeights::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SchedulingWeights::descriptor() {
  ::protobuf_scheduling_5fweights_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scheduling_5fweights_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SchedulingWeights& SchedulingWeights::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_scheduling_5fweights_2eproto::scc_info_SchedulingWeights.base);
  return *internal_default_instance();
}


void SchedulingWeights::Clear() {
// @@protoc_insertion_point(message_clear_start:SchedulingWeights)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weights_.Clear();
  ran_index_ = 0u;
  _internal_metadata_.Clear();
}

bool SchedulingWeights::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SchedulingWeights)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ran_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ran_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float weights = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_weights())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_weights())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SchedulingWeights)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SchedulingWeights)
  return false;
#undef DO_
}

void SchedulingWeights::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SchedulingWeights)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ran_index = 1;
  if (this->ran_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ran_index(), output);
  }

  // repeated float weights = 2;
  if (this->weights_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _weights_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->weights().data(), this->weights_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SchedulingWeights)
}

::google::protobuf::uint8* SchedulingWeights::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SchedulingWeights)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ran_index = 1;
  if (this->ran_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ran_index(), target);
  }

  // repeated float weights = 2;
  if (this->weights_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _weights_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->weights_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SchedulingWeights)
  return target;
}

size_t SchedulingWeights::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SchedulingWeights)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float weights = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->weights_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _weights_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 ran_index = 1;
  if (this->ran_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ran_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SchedulingWeights::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SchedulingWeights)
  GOOGLE_DCHECK_NE(&from, this);
  const SchedulingWeights* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SchedulingWeights>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SchedulingWeights)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SchedulingWeights)
    MergeFrom(*source);
  }
}

void SchedulingWeights::MergeFrom(const SchedulingWeights& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SchedulingWeights)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weights_.MergeFrom(from.weights_);
  if (from.ran_index() != 0) {
    set_ran_index(from.ran_index());
  }
}

void SchedulingWeights::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SchedulingWeights)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SchedulingWeights::CopyFrom(const SchedulingWeights& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SchedulingWeights)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SchedulingWeights::IsInitialized() const {
  return true;
}

void SchedulingWeights::Swap(SchedulingWeights* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SchedulingWeights::InternalSwap(SchedulingWeights* other) {
  using std::swap;
  weights_.InternalSwap(&other->weights_);
  swap(ran_index_, other->ran_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SchedulingWeights::GetMetadata() const {
  protobuf_scheduling_5fweights_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scheduling_5fweights_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Blanking::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Blanking::kRanIndexFieldNumber;
const int Blanking::kAFieldNumber;
const int Blanking::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Blanking::Blanking()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_scheduling_5fweights_2eproto::scc_info_Blanking.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Blanking)
}
Blanking::Blanking(const Blanking& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ran_index_, &from.ran_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&ran_index_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:Blanking)
}

void Blanking::SharedCtor() {
  ::memset(&ran_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&ran_index_)) + sizeof(b_));
}

Blanking::~Blanking() {
  // @@protoc_insertion_point(destructor:Blanking)
  SharedDtor();
}

void Blanking::SharedDtor() {
}

void Blanking::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Blanking::descriptor() {
  ::protobuf_scheduling_5fweights_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scheduling_5fweights_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Blanking& Blanking::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_scheduling_5fweights_2eproto::scc_info_Blanking.base);
  return *internal_default_instance();
}


void Blanking::Clear() {
// @@protoc_insertion_point(message_clear_start:Blanking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ran_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&ran_index_)) + sizeof(b_));
  _internal_metadata_.Clear();
}

bool Blanking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Blanking)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ran_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ran_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 a = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 b = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Blanking)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Blanking)
  return false;
#undef DO_
}

void Blanking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Blanking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ran_index = 1;
  if (this->ran_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ran_index(), output);
  }

  // int32 a = 2;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->a(), output);
  }

  // int32 b = 3;
  if (this->b() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->b(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Blanking)
}

::google::protobuf::uint8* Blanking::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Blanking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ran_index = 1;
  if (this->ran_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ran_index(), target);
  }

  // int32 a = 2;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->a(), target);
  }

  // int32 b = 3;
  if (this->b() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->b(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Blanking)
  return target;
}

size_t Blanking::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Blanking)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 ran_index = 1;
  if (this->ran_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ran_index());
  }

  // int32 a = 2;
  if (this->a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  // int32 b = 3;
  if (this->b() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->b());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Blanking::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Blanking)
  GOOGLE_DCHECK_NE(&from, this);
  const Blanking* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Blanking>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Blanking)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Blanking)
    MergeFrom(*source);
  }
}

void Blanking::MergeFrom(const Blanking& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Blanking)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ran_index() != 0) {
    set_ran_index(from.ran_index());
  }
  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.b() != 0) {
    set_b(from.b());
  }
}

void Blanking::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Blanking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Blanking::CopyFrom(const Blanking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Blanking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Blanking::IsInitialized() const {
  return true;
}

void Blanking::Swap(Blanking* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Blanking::InternalSwap(Blanking* other) {
  using std::swap;
  swap(ran_index_, other->ran_index_);
  swap(a_, other->a_);
  swap(b_, other->b_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Blanking::GetMetadata() const {
  protobuf_scheduling_5fweights_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scheduling_5fweights_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SchedulingWeights* Arena::CreateMaybeMessage< ::SchedulingWeights >(Arena* arena) {
  return Arena::CreateInternal< ::SchedulingWeights >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Blanking* Arena::CreateMaybeMessage< ::Blanking >(Arena* arena) {
  return Arena::CreateInternal< ::Blanking >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
