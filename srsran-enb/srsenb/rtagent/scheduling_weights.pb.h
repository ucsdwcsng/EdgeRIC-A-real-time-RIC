// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scheduling_weights.proto

#ifndef PROTOBUF_INCLUDED_scheduling_5fweights_2eproto
#define PROTOBUF_INCLUDED_scheduling_5fweights_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_scheduling_5fweights_2eproto 

namespace protobuf_scheduling_5fweights_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_scheduling_5fweights_2eproto
class Blanking;
class BlankingDefaultTypeInternal;
extern BlankingDefaultTypeInternal _Blanking_default_instance_;
class SchedulingWeights;
class SchedulingWeightsDefaultTypeInternal;
extern SchedulingWeightsDefaultTypeInternal _SchedulingWeights_default_instance_;
namespace google {
namespace protobuf {
template<> ::Blanking* Arena::CreateMaybeMessage<::Blanking>(Arena*);
template<> ::SchedulingWeights* Arena::CreateMaybeMessage<::SchedulingWeights>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class SchedulingWeights : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SchedulingWeights) */ {
 public:
  SchedulingWeights();
  virtual ~SchedulingWeights();

  SchedulingWeights(const SchedulingWeights& from);

  inline SchedulingWeights& operator=(const SchedulingWeights& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SchedulingWeights(SchedulingWeights&& from) noexcept
    : SchedulingWeights() {
    *this = ::std::move(from);
  }

  inline SchedulingWeights& operator=(SchedulingWeights&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SchedulingWeights& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SchedulingWeights* internal_default_instance() {
    return reinterpret_cast<const SchedulingWeights*>(
               &_SchedulingWeights_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SchedulingWeights* other);
  friend void swap(SchedulingWeights& a, SchedulingWeights& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SchedulingWeights* New() const final {
    return CreateMaybeMessage<SchedulingWeights>(NULL);
  }

  SchedulingWeights* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SchedulingWeights>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SchedulingWeights& from);
  void MergeFrom(const SchedulingWeights& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SchedulingWeights* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float weights = 2;
  int weights_size() const;
  void clear_weights();
  static const int kWeightsFieldNumber = 2;
  float weights(int index) const;
  void set_weights(int index, float value);
  void add_weights(float value);
  const ::google::protobuf::RepeatedField< float >&
      weights() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_weights();

  // uint32 ran_index = 1;
  void clear_ran_index();
  static const int kRanIndexFieldNumber = 1;
  ::google::protobuf::uint32 ran_index() const;
  void set_ran_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SchedulingWeights)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > weights_;
  mutable int _weights_cached_byte_size_;
  ::google::protobuf::uint32 ran_index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_scheduling_5fweights_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Blanking : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Blanking) */ {
 public:
  Blanking();
  virtual ~Blanking();

  Blanking(const Blanking& from);

  inline Blanking& operator=(const Blanking& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Blanking(Blanking&& from) noexcept
    : Blanking() {
    *this = ::std::move(from);
  }

  inline Blanking& operator=(Blanking&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Blanking& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Blanking* internal_default_instance() {
    return reinterpret_cast<const Blanking*>(
               &_Blanking_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Blanking* other);
  friend void swap(Blanking& a, Blanking& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Blanking* New() const final {
    return CreateMaybeMessage<Blanking>(NULL);
  }

  Blanking* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Blanking>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Blanking& from);
  void MergeFrom(const Blanking& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Blanking* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 ran_index = 1;
  void clear_ran_index();
  static const int kRanIndexFieldNumber = 1;
  ::google::protobuf::uint32 ran_index() const;
  void set_ran_index(::google::protobuf::uint32 value);

  // int32 a = 2;
  void clear_a();
  static const int kAFieldNumber = 2;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // int32 b = 3;
  void clear_b();
  static const int kBFieldNumber = 3;
  ::google::protobuf::int32 b() const;
  void set_b(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Blanking)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 ran_index_;
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 b_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_scheduling_5fweights_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SchedulingWeights

// uint32 ran_index = 1;
inline void SchedulingWeights::clear_ran_index() {
  ran_index_ = 0u;
}
inline ::google::protobuf::uint32 SchedulingWeights::ran_index() const {
  // @@protoc_insertion_point(field_get:SchedulingWeights.ran_index)
  return ran_index_;
}
inline void SchedulingWeights::set_ran_index(::google::protobuf::uint32 value) {
  
  ran_index_ = value;
  // @@protoc_insertion_point(field_set:SchedulingWeights.ran_index)
}

// repeated float weights = 2;
inline int SchedulingWeights::weights_size() const {
  return weights_.size();
}
inline void SchedulingWeights::clear_weights() {
  weights_.Clear();
}
inline float SchedulingWeights::weights(int index) const {
  // @@protoc_insertion_point(field_get:SchedulingWeights.weights)
  return weights_.Get(index);
}
inline void SchedulingWeights::set_weights(int index, float value) {
  weights_.Set(index, value);
  // @@protoc_insertion_point(field_set:SchedulingWeights.weights)
}
inline void SchedulingWeights::add_weights(float value) {
  weights_.Add(value);
  // @@protoc_insertion_point(field_add:SchedulingWeights.weights)
}
inline const ::google::protobuf::RepeatedField< float >&
SchedulingWeights::weights() const {
  // @@protoc_insertion_point(field_list:SchedulingWeights.weights)
  return weights_;
}
inline ::google::protobuf::RepeatedField< float >*
SchedulingWeights::mutable_weights() {
  // @@protoc_insertion_point(field_mutable_list:SchedulingWeights.weights)
  return &weights_;
}

// -------------------------------------------------------------------

// Blanking

// uint32 ran_index = 1;
inline void Blanking::clear_ran_index() {
  ran_index_ = 0u;
}
inline ::google::protobuf::uint32 Blanking::ran_index() const {
  // @@protoc_insertion_point(field_get:Blanking.ran_index)
  return ran_index_;
}
inline void Blanking::set_ran_index(::google::protobuf::uint32 value) {
  
  ran_index_ = value;
  // @@protoc_insertion_point(field_set:Blanking.ran_index)
}

// int32 a = 2;
inline void Blanking::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 Blanking::a() const {
  // @@protoc_insertion_point(field_get:Blanking.a)
  return a_;
}
inline void Blanking::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:Blanking.a)
}

// int32 b = 3;
inline void Blanking::clear_b() {
  b_ = 0;
}
inline ::google::protobuf::int32 Blanking::b() const {
  // @@protoc_insertion_point(field_get:Blanking.b)
  return b_;
}
inline void Blanking::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:Blanking.b)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_scheduling_5fweights_2eproto
